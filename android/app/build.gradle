def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 30

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "cv.bebrave.health.recipes"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode System.getenv('APPCENTER_BUILD_ID').toInteger() // flutterVersionCode.toInteger()
        versionName flutterVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "ANDROID_APP_SECRET", "\"${System.getenv("RECIPES_ANDROID_APP_SECRET")}\""
    }

    flavorDimensions "distribute"
    productFlavors {
        appCenter {
            dimension "distribute"
        }

        googlePlay {
            dimension "distribute"
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            def taskSuffix = variant.name.capitalize()
            def bundleTaskName = "bundle${taskSuffix}"
            if (tasks.findByName(bundleTaskName)) {
                def copyAABTask = tasks.create(name: "copyAndRenameAab${taskSuffix}", type: Copy) {
                    def bundleBuildDir = "${buildDir}/outputs/bundle"
                    def originalDirPath = "${variant.productFlavors.name.join()}${variant.buildType.name}"
                    def originalFileName = "${project.archivesBaseName}-${variant.productFlavors.name.join('-')}-${variant.buildType.name}.aab"
                    from "${bundleBuildDir}/${originalDirPath}/${originalFileName}"
                    into "${bundleBuildDir}/${variant.buildType.name}/"
                    rename ("${originalFileName}", "app.aab")
                }
                tasks[bundleTaskName].finalizedBy = [copyAABTask]
            }
        }
    }

    // signingConfigs {
        // release {
            // storeFile rootProject.file("app/recipes_keystore.jks")
            // storePassword System.getenv("APPCENTER_KEYSTORE_PASSWORD")
            // keyAlias System.getenv("APPCENTER_KEY_ALIAS")
            // keyPassword System.getenv("APPCENTER_KEY_PASSWORD")
        //  }
    // }

    buildTypes {
        release {
            // signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    testImplementation 'junit:junit:4.12'

    // https://developer.android.com/jetpack/androidx/releases/test/#1.2.0
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
