name: QA
on:
  pull_request:
    branches:
      - distribute

jobs:

  emulator_test:
    name: Remaining Test Job
    if: startsWith(github.event.pull_request.body, '[RELEASE]') != true
    runs-on: ubuntu-latest
    steps:
      - name: Run Remaining Test Job
        run: echo "Running Remaining Test Job"
      - run: echo ${{needs.check_commit_message.outputs.output}}

  alpha_release:
    name: Remaining Release Job
    if: startsWith(github.event.pull_request.body, '[RELEASE]')
    runs-on: ubuntu-latest
    steps:
      # Setup Java and Flutter
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      # Flutter Clean and pub get
      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: key.jks
          encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
      - name: Clean Flutter Packages
        run: flutter clean
      - name: Get Flutter Packages
        run: flutter pub get

      - name: Assemble Android drive test artifacts
        run: pushd android
          && flutter build apk
          && ./gradlew app:assembleAndroidTest
          && ./gradlew app:assembleDebug -Ptarget=integration_test/app_test.dart
          && popd

      - name: Login to Google Cloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_key: ${{ secrets.GCLOUD_AUTH }}

      - name: Set current project
        run: gcloud config set project ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Run Instrumentation Tests in Firebase Test Lab
        run: gcloud firebase test android run
          --type instrumentation
          --app build/app/outputs/apk/debug/app-debug.apk
          --test build/app/outputs/apk/androidTest/debug/app-debug-androidTest.apk
          --device model=Pixel2,version=28,locale=pl,orientation=portrait
